.VSBasePath         = 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community'
.WindowsSDKBasePath = 'C:\Program Files (x86)\Windows Kits\10'
.MACROS             = { 'UNICODE', '_UNICODE'}
// Settings
//------------------------------------------------------------------------------
Settings
{
    .Environment    = { "PATH=$VSBasePath$\Common7\IDE\;$VSBasePath$\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64\",
                        "TMP=C:\Windows\Temp",
                        "SystemRoot=C:\Windows" }
}

// X86 ToolChain
//------------------------------------------------------------------------------
.Compiler           = '$VSBasePath$\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64\cl.exe'
.CompilerOptions    = '"%1"'           // Input
                    + ' /Fo"%2"'       // Output
                    + ' /Z7'           // Debug format (in .obj)
                    + ' /c'            // Compile only
                    + ' /nologo'       // No compiler spam
                    + ' /W3'           // Warning level 3
                    + ' /WX-'           // Warnings as errors

ForEach(.MACRO in .MACROS)
{
  ^CompilerOptions   + ' /D"$MACRO$"'
}
.Librarian          = "$VSBasePath$\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64\lib.exe"
.LibrarianOptions   = '/NODEFAULTLIB /WX /NOLOGO /OUT:%2 %1'

.Linker             = '$VSBasePath$\VC\Tools\MSVC\14.29.30133\bin\Hostx64\x64\link.exe'
.LinkerOptions      = ' /OUT:"%2"'     // Output
                    + ' "%1"'          // Input
                    + ' /WX'           // Warnings as errors
                    + ' /NOLOGO'       // No linker spam
                    + ' /DEBUG'        // Keep debug info when linking
                    + ' /NODEFAULTLIB' // We'll specify the libs explicitly

// Include paths
//------------------------------------------------------------------------------
.BaseIncludePaths   = ' /I"./"'
                    + ' /I"$VSBasePath$/VC/Tools/MSVC/14.29.30133/include"'
                    + ' /I"$WindowsSDKBasePath$/Include/10.0.19041.0/ucrt"'
                    + ' /I"$WindowsSDKBasePath$/Include/10.0.19041.0/um"'
.CompilerOptions    + .BaseIncludePaths

// Library paths
//------------------------------------------------------------------------------
.LibPaths           = ' /LIBPATH:"$WindowsSDKBasePath$\Lib\10.0.19041.0\um\x64"'
                    + ' /LIBPATH:"$VSBasePath$\VC\Tools\MSVC\14.29.30133\lib\x64"'
                    + ' /LIBPATH:"$WindowsSDKBasePath$\Lib\10.0.19041.0\ucrt\x64"'
.LinkerOptions      + .LibPaths

//Alice
Library( 'libRuntime' )
{
.CompilerInputPath = 'Runtime\'
.CompilerOutputPath= 'Build\Temp\libRuntime\'
.LibrarianOutput   = 'Build\Libs\libRuntime.lib'
}
Library( 'libWindowsPlatform' )
{
.CompilerInputPath = 'Platform\Windows\Common\'
.CompilerOutputPath= 'Build\Temp\libWindowsPlatform\'
.LibrarianOutput   = 'Build\Libs\libWindowsPlatform.lib'
}

Executable( 'Editor' )
{
    .Libraries          = {'libRuntime', 'libWindowsPlatform'}
    .LinkerOutput       = 'Build\Editor.exe'
    .LinkerOptions      + ' libcmt.lib'     // Std Lib (Multi-Threaded, Static, Release)
                        + ' msvcrt.lib'
                        + ' vcruntime.lib'
                        + ' ucrt.lib'
                        + ' kernel32.lib'   // Kernel functions
}
Alias( 'all' ) { .Targets = { 'Editor' } }